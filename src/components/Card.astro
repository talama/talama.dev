---
import { slugifyStr } from "@/utils/slugify";
import type { CollectionEntry } from "astro:content";
import { getPath } from "@/utils/getPath";
import Datetime from "./Datetime.astro";
// import Tag from "@/components/Tag.astro";
import IconCategory from "@/assets/icons/IconCategory.svg";
import IconTag from "@/assets/icons/IconTag.svg";

export interface Props extends CollectionEntry<"blog"> {
  variant?: "h2" | "h3";
  fallbackDesc?: string;
}

const { variant = "h2", data, id, filePath, fallbackDesc } = Astro.props;

const {
  title,
  subtitle,
  description,
  date,
  updated,
  timezone,
  tags,
  categories,
} = data;

const headerProps = {
  style: { viewTransitionName: slugifyStr(title) },
  class: "text-2xl font-medium hover:underline",
};
---

<li class="my-8">
  <a href={getPath(id, filePath)} class="group">
    <div
      class="inline-block text-lg font-medium text-accent underline-offset-4 group-hover:underline focus-visible:no-underline focus-visible:underline-offset-0"
    >
      {
        variant === "h2" ? (
          <h2 {...headerProps}>{title}</h2>
        ) : (
          <h3 {...headerProps}>{title}</h3>
        )
      }
    </div>
    {subtitle && <h4 class="text-md mb-3">{subtitle}</h4>}

    <p class="mb-1 text-lg">{description || fallbackDesc}</p>

    <div class="flex flex-col flex-wrap space-y-2 md:flex-row md:space-y-0">
      <div class="mr-4 flex items-center space-x-0.5">
        <Datetime
          pubDatetime={date}
          modDatetime={updated}
          {timezone}
          class="opacity-80"
        />
      </div>
      {
        categories.length > 0 && (
          <div class="mr-4 flex items-center space-x-0.5 opacity-80">
            <IconCategory class="mt-0.5 h-4 w-4" />
            <span class="text-sm">{categories}</span>
          </div>
        )
      }
      {
        tags.length > 0 && (
          <div class="flex items-center space-x-0.5 opacity-80">
            <IconTag class="mt-0.5 h-4 w-4" />
            <div class="flex flex-wrap">
              {tags.map((tag: string) => (
                <p class="mr-2 text-sm">#{tag}</p>
              ))}
            </div>
          </div>
        )
      }
    </div>
  </a>
</li>
